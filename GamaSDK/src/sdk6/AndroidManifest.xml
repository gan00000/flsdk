<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android">

    <!--需要添加以下配置 start-->

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
<!--    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />-->
    <!-- VERY IMPORTANT! Don't forget this permission, or in-app billing won't work. -->
<!--    <uses-permission android:name="com.android.vending.BILLING" />-->
<!--    Apps targeting Android 13 should add the following permission to AndroidManifest.xml to access the Android Advertising Identifier-->
    <uses-permission android:name="com.google.android.gms.permission.AD_ID" />

    <uses-permission android:name="android.permission.POST_NOTIFICATIONS"/>

    <uses-feature
        android:name="android.hardware.microphone"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.telephony"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.location.gps"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.location"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.location.NETWORK"
        android:required="false" />

    <supports-screens
        android:anyDensity="true"
        android:largeScreens="true"
        android:normalScreens="true"
        android:resizeable="true"
        android:smallScreens="true"
        android:xlargeScreens="true" />


    <!--  如果您的应用程序面向 Android 11 或更高版本，请向 AndroidManifest.xml 文件添加以下查询块，以使 Facebook 应用对您的应用可见：-->
    <queries>
        <provider android:authorities="com.facebook.katana.provider.PlatformProvider" />
    </queries>

    <application>

        <activity
            android:name="com.mw.sdk.MWWebPayActivity"
            android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|screenSize|smallestScreenSize|fontScale"
            android:windowSoftInputMode="stateHidden|adjustResize"
            android:screenOrientation="sensorPortrait"
            android:theme="@style/Sdk.Theme.AppCompat.Light.NoActionBar.FullScreen"/>

        <activity
            android:name="com.mw.sdk.MWBaseWebActivity"
            android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|screenSize|smallestScreenSize|fontScale"
            android:windowSoftInputMode="stateHidden|adjustResize"
            android:screenOrientation="sensorPortrait"
            android:theme="@style/Sdk.Theme.AppCompat.Light.NoActionBar.FullScreen"/>

        <activity
            android:name="com.mw.sdk.GooglePayActivity2"
            android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|screenSize|smallestScreenSize|fontScale"
            android:windowSoftInputMode="stateHidden|adjustResize"
            android:theme="@style/Sdk.Theme.AppCompat.Light.NoActionBar.FullScreen.Translucent"/>


        <!-- ==========================fb共同需要的配置============================ -->

        <meta-data
            android:name="com.facebook.sdk.ApplicationId"
            android:value="@string/facebook_app_id" />
        <meta-data android:name="com.facebook.sdk.ClientToken"
            android:value="@string/facebook_client_token"/>

        <activity
            android:name="com.facebook.FacebookActivity"
            android:configChanges="keyboard|keyboardHidden|screenLayout|screenSize|orientation" />

        <activity android:name="com.facebook.CustomTabMainActivity" />

        <activity
            android:name="com.facebook.CustomTabActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />
                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />
                <data android:scheme="@string/fb_login_protocol_scheme" />
            </intent-filter>
        </activity>


        <!--
         The initialization ContentProvider will call FacebookSdk.sdkInitialize automatically
         with the application context. This config is merged in with the host app's manifest,
         but there can only be one provider with the same authority activated at any given
         point; so if the end user has two or more different apps that use Facebook SDK, only the
         first one will be able to use the provider. To work around this problem, we use the
         following placeholder in the authority to identify each host application as if it was
         a completely different provider.
        -->
        <provider
            android:name="com.facebook.internal.FacebookInitProvider"
            android:authorities="${applicationId}.FacebookInitProvider"
            android:exported="false" />

        <!-- 如需要从Facebook进行本地图片分享，需要开启以下两项 -->
<!--        <meta-data-->
<!--            android:name="com.facebook.sdk.ApplicationName"-->
<!--            android:value="@string/facebook_app_name" />-->

        <!--如果要通过 Android 版 Facebook 应用分享链接、图片或视频，还需要在清单文件中声明 FacebookContentProvider-->
        <provider
            android:name="com.facebook.FacebookContentProvider"
            android:authorities="@string/facebook_authorities"
            android:exported="true" />

        <meta-data android:name="com.facebook.sdk.AutoLogAppEventsEnabled"
            android:value="true"/>
        <meta-data android:name="com.facebook.sdk.AutoInitEnabled"
            android:value="true"/>
        <meta-data android:name="com.facebook.sdk.AdvertiserIDCollectionEnabled"
            android:value="true"/>
        <!-- 以上 -->

<!--        ================================-->
<!--        ================================-->

        <!--The AppsFlyer Install Receiver is first and will broadcast to all receivers placed below it-->
<!--        <receiver android:name="com.appsflyer.MultipleInstallBroadcastReceiver" android:exported="true">-->
<!--            <intent-filter>-->
<!--                <action android:name="com.android.vending.INSTALL_REFERRER" />-->
<!--            </intent-filter>-->
<!--        </receiver>-->

<!--        <receiver android:name="com.mw.sdk.GamaBroadcastReceiver" android:exported="true">-->
<!--            <intent-filter>-->
<!--                <action android:name="com.android.vending.INSTALL_REFERRER" />-->
<!--            </intent-filter>-->
<!--        </receiver>-->


        <provider
            android:authorities="${applicationId}.MWSDKProvider"
            android:name="com.core.base.fileprovider.SDKFileProvider"
            android:exported="false"
            android:grantUriPermissions="true">

            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/filepaths"/>

        </provider>

<!--        &lt;!&ndash; 18：9的宽屏 &ndash;&gt;-->
<!--        <meta-data android:name="android.max_aspect" android:value="2.4" />-->

<!--        &lt;!&ndash; ONE store 支付版本 &ndash;&gt;-->
<!--        <meta-data-->
<!--            android:name="iap:api_version"-->
<!--            android:value="5"/>-->


<!--        fcm-->
        <service android:name="com.mw.fcm.MWFirebaseMessagingService" android:exported="false">

            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>

        </service>

        <!-- Set custom default icon. This is used when no icon is set for incoming notification messages.
     See README(https://goo.gl/l4GJaQ) for more. -->
<!--        <meta-data-->
<!--            android:name="com.google.firebase.messaging.default_notification_icon"-->
<!--            android:resource="@drawable/ic_stat_ic_notification" />-->
        <!-- Set color used with incoming notification messages. This is used when no color is set for the incoming
             notification message. See README(https://goo.gl/6BKBk7) for more. -->
<!--        <meta-data-->
<!--            android:name="com.google.firebase.messaging.default_notification_color"-->
<!--            android:resource="@color/colorAccent" />-->
<!--        从 Android 8.0（API 级别 26）和更高版本开始，我们支持并推荐使用通知渠道。FCM 提供具有基本设置的默认通知渠道。如果您希望创建和使用自己的默认渠道，-->
<!--        请将 default_notification_channel_id 设置为您的通知渠道对象的 ID（如下所示）；只要传入的消息未明确设置通知渠道，FCM 就会使用此值。如需了解详情，请参阅管理通知渠道。-->
<!--        <meta-data-->
<!--            android:name="com.google.firebase.messaging.default_notification_channel_id"-->
<!--            android:value="@string/default_notification_channel_id" />-->

    </application>

    <!--需要添加以下配置 end-->

</manifest>