import java.util.regex.Matcher
import java.util.regex.Pattern

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

android {

    compileSdkVersion 27
    buildToolsVersion '28.0.2'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 27
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86"  // 指定要ndk需要兼容的架构(这样其他依赖包里mips之类的.so会被过滤掉)
        }

        multiDexEnabled true
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            //定义一个文件
//            outputFileName = "${variant.name}-${variant.versionName}.apk"
//            def outputFile = output.outputFile
            //定义存储apk的位置和文件名，这里文件名格式定义为 [applicationId_版本号_ReleaseTime_apk]
            if (outputFileName != null && outputFileName.contains("release") && outputFileName.endsWith('.apk')) {

                outputFileName = "${variant.applicationId}_${variant.versionCode}_${variant.versionName}_${getReleaseTime()}_release.apk"

            } else if (outputFile != null && outputFile.name.contains("debug") && outputFile.name.endsWith('.apk')) {

                outputFileName = "${variant.applicationId}_${variant.versionCode}_${variant.versionName}_${getReleaseTime()}_debug.apk"
            }
        }
    }


    signingConfigs {//签名的配置
        release {
            storeFile file('../signkey/gamamobi.jks') //正式签名，以后使用
            storePassword 'gamamobi'
            keyAlias 'gamamobi'
            keyPassword 'gamamobi'
        }
        debug {
            storeFile file('../signkey/gamamobi.jks')
            storePassword 'gamamobi'
            keyAlias 'gamamobi'
            keyPassword 'gamamobi'
        }
    }

    buildTypes {
        release {
//            multiDexEnabled true //Add this
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
        }
    }
    productFlavors {

        twweb {
            signingConfig signingConfigs.release
            applicationId "com.gamamobi.twsm"
            minSdkVersion 21
            targetSdkVersion 28
            versionCode 1
            versionName "1.0"
            flavorDimensions "1"
            resValue "string", "scheme", "twsm"
            resValue "string", "facebook_app_id", "404025320186326"
            resValue "string", "facebook_authorities", "com.facebook.app.FacebookContentProvider404025320186326"
            resValue "string", "fb_login_protocol_scheme", "fb404025320186326"
            resValue "string", "facebook_app_name", "神魔大陸2"
            //每个游戏的demo设置
            resValue "string", "test_sku", "com.gamamobi.smdl.1usd"
            resValue "string", "sdk_name", "神魔大陸2Demo"

            buildConfigField "String[]", "PRODUCE_LIST",
                    "{" +
                            "\"com.gamamobi.smdl.1usd\"," +
                            "}"
        }

    }

    android {
        lintOptions {
            checkReleaseBuilds false
            // Or, if you prefer, you can continue to check for errors in release builds,
            // but continue the build even when errors are found:
            abortOnError false
        }
    }
}

repositories {
    flatDir {
        dirs 'libs', '../GamaSDK/libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':GamaSDK')
    //    implementation 'com.android.support:multidex:1.0.1'
    //    implementation 'com.google.android.gms:play-services-base:15.0.1'
    //    implementation 'com.android.support:recyclerview-v7:27.0.2'
    //    implementation 'com.android.support:support-v4:27.0.2'
    //    compile 'com.android.support:multidex:1.0.2'
    //    implementation 'com.facebook.android:facebook-android-sdk:[4,5)'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
}


def getReleaseTime() {
    return new Date().format("yyyy-MM-dd-HH-mm", TimeZone.getDefault())
}

def getCurrentFlavor() {

    Gradle gradle = getGradle()
    String  tskReqStr = gradle.getStartParameter().getTaskRequests().toString()
    println "str is " + tskReqStr
    Pattern pattern;

    if( tskReqStr.contains( "assemble" ) )
        pattern = Pattern.compile("assemble(\\w+)(Release|Debug)")
    else
        pattern = Pattern.compile("generate(\\w+)(Release|Debug)")

    Matcher matcher = pattern.matcher( tskReqStr )

    if( matcher.find() )
        return matcher.group(1).toLowerCase()
    else
    {
        println "NO MATCH FOUND"
        return "";
    }
}

apply plugin: 'com.google.gms.google-services'
